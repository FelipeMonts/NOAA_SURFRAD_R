{
    "collab_server" : "",
    "contents" : "#\n#############################################################################################################################\n#\n#  Program to extract Weather Data from the SURFRAD Network weather station in Penn State, Pennsylvania\n#  https://www.esrl.noaa.gov/gmd/grad/surfrad/pennstat.html\n#  ftp://aftp.cmdl.noaa.gov/data/radiation/surfrad/Penn_State_PA/README\n#\n#  Felipe Montes,  2017/03/07\n#\n##############################################################################################################################\n\n\n\n\n\n\n###############################################################################################################\n#                          Loading Packages and setting up working directory                        \n###############################################################################################################\n\n\n\n#  Tell the program where the package libraries are  #####################\n\n\n.libPaths(\"C:/Felipe/R_Library/library\")\n\n#  Set Working directory\n\n\nsetwd(\"C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/RoseRCodeScripts/NOAA_SURFRAD_R\") ; \n\n\n\n\n\n###############################################################################################################\n#                         Loading data from a daily data file .dat from the Penn State\n#                             SURFRAD fttp archive\n###############################################################################################################\n\n## Create the URL's path for the directory to be added to the file\n\nPennStSurfrad.url<-\"ftp://aftp.cmdl.noaa.gov/data/radiation/surfrad/Penn_State_PA/2016/\"   ;\n\nFileName<-\"psu16001.dat\" ;  \n\n\n### Read the station name, latitude, Long, elevation above sea levelpsu10001.data\n\npsu10001.station.name<-readLines(paste0(PennStSurfrad.url,FileName),n=1)  ;\n\npsu10001.station.data<-read.table(paste0(PennStSurfrad.url,FileName), skip= 1 ,nrows=1, header=F, as.is= T)  ;\n\nnames(psu10001.station.data)<-c(\"LATITUDE\", \"LONGITUDE\" , \"ALTITUDE\" , \"meters\",\"version\" ,\"version No\") ;\n\n\n\n\n### write the Station name and data to the file where the data formated for cycles will be stored\n\n\nwrite(psu10001.station.name, file=\"SurfradData.txt\") ;\n\nwrite(paste(names(psu10001.station.data)[1],psu10001.station.data[1]),file=\"SurfradData.txt\", append=T) ;\n\nwrite(paste(names(psu10001.station.data)[3],psu10001.station.data[3]),file=\"SurfradData.txt\", append=T) ;\n\nwrite(c(\"SCREENING_HEIGHT  10\"),file=\"SurfradData.txt\", append=T);\n\n\n\n### Define and write the column headings for the data that is to be stored in the table according to the format needed for Cycles\n\nYEAR = 987654321 ; \n\nDOY = 987654321  ;\n\nTX = 987654321  ;\n\nTN = 987654321  ;\n\nSOLAR = 987654321  ; \n\nRHX = 987654321  ;\n\nRHN = 987654321  ;\n\nWIND = 987654321  ;\n\n\nwrite.table(data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)[F,] , file=\"SurfradData.txt\" , append=T , row.names = F, sep=\"\\t\", quote = F ) ;\n\n#### Read one day of data .dat file from the SURFRAD URl \n\n\npsu10001.data<-read.table(paste0(PennStSurfrad.url,FileName), skip=2, header=F, as.is= T)   ;\n\n\n##### Formatting the data according to the description on the README data file and adding column names\n#####  ftp://aftp.cmdl.noaa.gov/data/radiation/surfrad/Penn_State_PA/README\n\nSurfRad.names<-c(\"year\" #\t\t\tinteger\tyear, i.e., 1995\n, \"jday\" #\t\t\tinteger\tJulian day (1 through 365 [or 366])\n, \"month\" #\t\t\tinteger\tnumber of the month (1-12)\n, \"day\" #\t\t\tinteger\tday of the month(1-31)\n, \"hour\" #\t\t\tinteger\thour of the day (0-23)\n, \"min\" #\t\t\tinteger\tminute of the hour (0-59)\n, \"dt\" #\t\t\treal\tdecimal time (hour.decimalminutes, e.g., 23.5 = 2330)\n, \"zen\" #\t\t\treal\tsolar zenith angle (degrees)\n, \"dw_solar\" #\t\treal\tdownwelling global solar (Watts m^-2)\n, \"uw_solar\" #\t\treal\tupwelling global solar (Watts m^-2)\n, \"direct_n\" #\t\treal\tdirect-normal solar (Watts m^-2)\n, \"diffuse\" #\t\treal\tdownwelling diffuse solar (Watts m^-2)\n, \"dw_ir\" #\t\t\treal\tdownwelling thermal infrared (Watts m^-2)\n, \"dw_casetemp\" #\t\treal\tdownwelling IR case temp. (K)\n, \"dw_dometemp\" #\t\treal\tdownwelling IR dome temp. (K)\n, \"uw_ir\" #\t\t\treal\tupwelling thermal infrared (Watts m^-2)\n, \"uw_casetemp\" #\t\treal\tupwelling IR case temp. (K)\n, \"uw_dometemp\" #\t\treal\tupwelling IR dome temp. (K)\n, \"uvb\" #\t\t\treal\tglobal UVB (milliWatts m^-2)\n, \"par\" #\t\t\treal\tphotosynthetically active radiation (Watts m^-2)\n, \"netsolar\" #\t\treal\tnet solar (dw_solar - uw_solar) (Watts m^-2)\n, \"netir\" #\t\t\treal\tnet infrared (dw_ir - uw_ir) (Watts m^-2)\n, \"totalnet\" #\t\treal\tnet radiation (netsolar+netir) (Watts m^-2)\n, \"temp\" #\t\t\treal\t10-meter air temperature (?C)\n, \"rh\" #\t\t\treal\trelative humidity (%)\n, \"windspd\" #\t\treal\twind speed (ms^-1)\n, \"winddir\" #\t\treal\twind direction (degrees, clockwise from north)\n, \"pressure\" )  ; #\t\treal\tstation pressure (mb)\n\n\n### Adding quality control flags -QC- names to he appropriate columns:\n\n\nnames(psu10001.data)[1:9]<-SurfRad.names[1:9]   ;\nnames(psu10001.data)[seq(10,48,2)]<-c(\"QC\") ;\nnames(psu10001.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;\n\n####  QC flags description\n\n# A QC flag of zero indicates that the corresponding data point is good, having\n# passed all QC checks. A value greater than 0 indicates that the data failed one\n# level of QC. For example, a QC value of 1 means that the recorded value is\n# beyond a physically possible range, or it has been affected adversely in some manner to produce a\n# knowingly bad value. A value of 2 indicates that the data value failed the second level QC check,\n# indicating that the data value may be\n# physically possible but should be used with scrutiny, and so on. Missing\n# values are indicated by -9999.9 and should always have a QC flag of 1.\n\n\n\n\n\n###############################################################################################################\n#              Processing the SURFRAD data to the format required by Cycles weather input files\n###############################################################################################################\n\n\n\n# PP TX TN SOLAR RHX RHN WIND  ; NO PP , temp , solar ? , rh, windspd, \n\n\n############################### Reading the Year and Doy of year   #######################################\n\n\nYEAR<-psu10001.data$year[1] ;\n\nDOY<-psu10001.data$jday[1]  ;\n\n\n\n############################### Extract Minimum and maximum temperature #######################################\n\n# Extracting the missing data marked as -9999.9 \n\n\n\nTX<-psu10001.data[which.max(psu10001.data[psu10001.data$temp != -9999.9,\"temp\"]),\"temp\"] ;\n\nTN<-psu10001.data[which.min(psu10001.data[psu10001.data$temp != -9999.9,\"temp\"]),\"temp\"] ;\n\nplot(psu10001.data$dt,psu10001.data$temp) ;\nplot(psu10001.data[psu10001.data$temp != -9999.9,\"dt\"],psu10001.data[psu10001.data$temp != -9999.9,\"temp\"]);\n\n\n\n\n############################### Extract cummulative radiation direct-normal solar (Watts m^-2) ##################\n\n\n# Extracting the missing data marked as -9999.9 \n\ndirect_n<-sum(psu10001.data[psu10001.data$direct_n != -9999.9,\"direct_n\"]) ;\n\nplot(psu10001.data$dt,psu10001.data$direct_n) ;\n\nplot(psu10001.data[psu10001.data$direct_n != -9999.9,\"dt\"],psu10001.data[psu10001.data$direct_n != -9999.9,\"direct_n\"]) ;\n\n\nplot(psu10001.data[psu10001.data$direct_n != -9999.9,\"dt\"],cumsum(psu10001.data[psu10001.data$direct_n != -9999.9,\"direct_n\"])) ;\nabline(h=direct_n, col=\"RED\",lwd=5)\n\n\n#Convert radiation data from Watts m^-2 to MJ/m2 \n\n# [watt/m2  = Watt-sec/m2-sec = Joule/m2-sec] * [60sec/min*60min/hr*24hr/day]*[1 MJ /10^6 J]\n\nSOLAR<-direct_n*(60*60*24)/(10^6) ;\n\n\n\n\n\n\n###############################  Extract Minimum and maximum relative humidity ###########################################\n\n\n\n\n\n# Extracting the missing data marked as -9999.9 \n\nRHX<-psu10001.data[which.max(psu10001.data[psu10001.data$rh != -9999.9,\"rh\"]),\"rh\"] ;\n\nRHN<-psu10001.data[which.min(psu10001.data[psu10001.data$rh != -9999.9,\"rh\"]),\"rh\"] ;\n\n\nplot(psu10001.data$dt,psu10001.data$rh) ;\nplot(psu10001.data[psu10001.data$rh != -9999.9,\"dt\"],psu10001.data[psu10001.data$rh != -9999.9,\"rh\"]) ;\n\n\n\n\n\n############################### Extract average wind speed ################################################################\n\n\n\n\n\n# Extracting the missing data marked as -9999.9 \n\nWIND<-mean(psu10001.data[psu10001.data$windspd != -9999.9,\"windspd\"]) ;\n\nplot(psu10001.data$dt,psu10001.data$windspd) ;\n\nplot(psu10001.data[psu10001.data$windspd != -9999.9,\"dt\"],psu10001.data[psu10001.data$windspd != -9999.9,\"windspd\"])\nabline(h=WIND, col=\"RED\",lwd=5)\n\n\n\n\n# Collect the data in a data frame and write it to the SurfradData.txt data file\n\nSurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;\n\n\nSurfradData[,c(\"TX\" , \"TN\" , \"SOLAR\" , \"RHX\" , \"RHN\" , \"WIND\")] <-signif(SurfradData[,c(\"TX\" , \"TN\" , \"SOLAR\" , \"RHX\" , \"RHN\" , \"WIND\")],5)\n\nwrite.table(SurfradData , file=\"SurfradData.txt\" , append=T , row.names = F, sep=\"\\t\", quote = F, col.names = F ) ;\n\n\n\n\n\n\n\n\n\n",
    "created" : 1489438896359.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2987618505",
    "id" : "701B0724",
    "lastKnownWriteTime" : 1489439481,
    "last_content_update" : 1489439482000,
    "path" : "C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/RoseRCodeScripts/NOAA_SURFRAD_R/SURFRAD_Loop_R.R",
    "project_path" : "SURFRAD_Loop_R.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}