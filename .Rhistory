sum(direct_n_MJ_m2)/10^6
lenght(direct_n)
length(direct_n)
(24*60/length(direct_n))
direct_n<-psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"] ;
SOLAR<-sum(direct_n) * 60 * (24*60/length(direct_n))  / 10^6 ;
SOLAR
RHX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
RHN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
SurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;
SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")] <-signif(SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")],4)
write.table(SurfradData , file="SurfradData.txt" , append=T , row.names = F, sep="\t", quote = F, col.names = F ) ;
rm("psuSRFRAD.data" ,"SurfradData",)
for (j in List_files)  {
# psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,i,"/",j), skip=2, header=F, as.is= T)   ;
psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,"2000","/","psu00180.dat"), skip=2, header=F, as.is= T)
##### Formatting the data according to the description on the README data file and adding column names
#####  ftp://aftp.cmdl.noaa.gov/data/radiation/surfrad/Penn_State_PA/README
SurfRad.names<-c("year" #			integer	year, i.e., 1995
, "jday" #			integer	Julian day (1 through 365 [or 366])
, "month" #			integer	number of the month (1-12)
, "day" #			integer	day of the month(1-31)
, "hour" #			integer	hour of the day (0-23)
, "min" #			integer	minute of the hour (0-59)
, "dt" #			real	decimal time (hour.decimalminutes, e.g., 23.5 = 2330)
, "zen" #			real	solar zenith angle (degrees)
, "dw_solar" #		real	downwelling global solar (Watts m^-2)
, "uw_solar" #		real	upwelling global solar (Watts m^-2)
, "direct_n" #		real	direct-normal solar (Watts m^-2)
, "diffuse" #		real	downwelling diffuse solar (Watts m^-2)
, "dw_ir" #			real	downwelling thermal infrared (Watts m^-2)
, "dw_casetemp" #		real	downwelling IR case temp. (K)
, "dw_dometemp" #		real	downwelling IR dome temp. (K)
, "uw_ir" #			real	upwelling thermal infrared (Watts m^-2)
, "uw_casetemp" #		real	upwelling IR case temp. (K)
, "uw_dometemp" #		real	upwelling IR dome temp. (K)
, "uvb" #			real	global UVB (milliWatts m^-2)
, "par" #			real	photosynthetically active radiation (Watts m^-2)
, "netsolar" #		real	net solar (dw_solar - uw_solar) (Watts m^-2)
, "netir" #			real	net infrared (dw_ir - uw_ir) (Watts m^-2)
, "totalnet" #		real	net radiation (netsolar+netir) (Watts m^-2)
, "temp" #			real	10-meter air temperature (?C)
, "rh" #			real	relative humidity (%)
, "windspd" #		real	wind speed (ms^-1)
, "winddir" #		real	wind direction (degrees, clockwise from north)
, "pressure" )  ; #		real	station pressure (mb)
### Adding quality control flags -QC- names to he appropriate columns:
names(psuSRFRAD.data)[1:9]<-SurfRad.names[1:9]   ;
names(psuSRFRAD.data)[seq(10,48,2)]<-c("QC") ;
names(psuSRFRAD.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;
####  QC flags description
# A QC flag of zero indicates that the corresponding data point is good, having
# passed all QC checks. A value greater than 0 indicates that the data failed one
# level of QC. For example, a QC value of 1 means that the recorded value is
# beyond a physically possible range, or it has been affected adversely in some manner to produce a
# knowingly bad value. A value of 2 indicates that the data value failed the second level QC check,
# indicating that the data value may be
# physically possible but should be used with scrutiny, and so on. Missing
# values are indicated by -9999.9 and should always have a QC flag of 1.
###############################################################################################################
#              Processing the SURFRAD data to the format required by Cycles weather input files
###############################################################################################################
# PP TX TN SOLAR RHX RHN WIND  ; NO PP , temp , solar ? , rh, windspd,
############################### Reading the Year and Doy of year   #######################################
YEAR<-psuSRFRAD.data$year[1] ;
DOY<-psuSRFRAD.data$jday[1]  ;
############################### Extract Minimum and maximum temperature #######################################
TX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
TN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$temp) ;
# plot(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]);
############################### Extract cummulative radiation direct-normal solar (Watts m^-2) ##################
# Extracting the missing data marked as -9999.9
direct_n<-psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$direct_n) ;
#
# plot(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"]) ;
#
#
# plot(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"dt"],cumsum(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"])) ;
# abline(h=direct_n, col="RED",lwd=5)
#Convert radiation data from Watts m^-2 to MJ/m2
# [watt/m2  = Watt-sec/m2-sec = Joule/m2-sec] * [60sec/min*60min/hr*24hr/day]*[1 MJ /10^6 J]
SOLAR<-sum(direct_n) * 60 * (24*60/length(direct_n))  / 10^6 ;
###############################  Extract Minimum and maximum relative humidity ###########################################
# Extracting the missing data marked as -9999.9
RHX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
RHN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$rh) ;
# plot(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]) ;
#
############################### Extract average wind speed ################################################################
# Extracting the missing data marked as -9999.9
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$windspd) ;
#
# plot(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"])
# abline(h=WIND, col="RED",lwd=5)
############################### Collect the data in a data frame and write it to the SurfradData.txt data file ############
SurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;
SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")] <-signif(SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")],4)
write.table(SurfradData , file="SurfradData.txt" , append=T , row.names = F, sep="\t", quote = F, col.names = F ) ;
rm("psuSRFRAD.data" ,"SurfradData",)
}
rm(j)
for (i in List_years[List_years != "README"])  {
List_HTML_files<-getURLContent(paste0(PennStSurfrad.url,i,"/"), ftp.use.epsv = FALSE, dirlistonly = TRUE)  ;
List_files<-strsplit(List_HTML_files,"\r*\n")[[1]] ;
for (j in List_files)  {
# psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,i,"/",j), skip=2, header=F, as.is= T)   ;
psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,"2000","/","psu00180.dat"), skip=2, header=F, as.is= T)
##### Formatting the data according to the description on the README data file and adding column names
#####  ftp://aftp.cmdl.noaa.gov/data/radiation/surfrad/Penn_State_PA/README
SurfRad.names<-c("year" #			integer	year, i.e., 1995
, "jday" #			integer	Julian day (1 through 365 [or 366])
, "month" #			integer	number of the month (1-12)
, "day" #			integer	day of the month(1-31)
, "hour" #			integer	hour of the day (0-23)
, "min" #			integer	minute of the hour (0-59)
, "dt" #			real	decimal time (hour.decimalminutes, e.g., 23.5 = 2330)
, "zen" #			real	solar zenith angle (degrees)
, "dw_solar" #		real	downwelling global solar (Watts m^-2)
, "uw_solar" #		real	upwelling global solar (Watts m^-2)
, "direct_n" #		real	direct-normal solar (Watts m^-2)
, "diffuse" #		real	downwelling diffuse solar (Watts m^-2)
, "dw_ir" #			real	downwelling thermal infrared (Watts m^-2)
, "dw_casetemp" #		real	downwelling IR case temp. (K)
, "dw_dometemp" #		real	downwelling IR dome temp. (K)
, "uw_ir" #			real	upwelling thermal infrared (Watts m^-2)
, "uw_casetemp" #		real	upwelling IR case temp. (K)
, "uw_dometemp" #		real	upwelling IR dome temp. (K)
, "uvb" #			real	global UVB (milliWatts m^-2)
, "par" #			real	photosynthetically active radiation (Watts m^-2)
, "netsolar" #		real	net solar (dw_solar - uw_solar) (Watts m^-2)
, "netir" #			real	net infrared (dw_ir - uw_ir) (Watts m^-2)
, "totalnet" #		real	net radiation (netsolar+netir) (Watts m^-2)
, "temp" #			real	10-meter air temperature (?C)
, "rh" #			real	relative humidity (%)
, "windspd" #		real	wind speed (ms^-1)
, "winddir" #		real	wind direction (degrees, clockwise from north)
, "pressure" )  ; #		real	station pressure (mb)
### Adding quality control flags -QC- names to he appropriate columns:
names(psuSRFRAD.data)[1:9]<-SurfRad.names[1:9]   ;
names(psuSRFRAD.data)[seq(10,48,2)]<-c("QC") ;
names(psuSRFRAD.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;
####  QC flags description
# A QC flag of zero indicates that the corresponding data point is good, having
# passed all QC checks. A value greater than 0 indicates that the data failed one
# level of QC. For example, a QC value of 1 means that the recorded value is
# beyond a physically possible range, or it has been affected adversely in some manner to produce a
# knowingly bad value. A value of 2 indicates that the data value failed the second level QC check,
# indicating that the data value may be
# physically possible but should be used with scrutiny, and so on. Missing
# values are indicated by -9999.9 and should always have a QC flag of 1.
###############################################################################################################
#              Processing the SURFRAD data to the format required by Cycles weather input files
###############################################################################################################
# PP TX TN SOLAR RHX RHN WIND  ; NO PP , temp , solar ? , rh, windspd,
############################### Reading the Year and Doy of year   #######################################
YEAR<-psuSRFRAD.data$year[1] ;
DOY<-psuSRFRAD.data$jday[1]  ;
############################### Extract Minimum and maximum temperature #######################################
TX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
TN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$temp) ;
# plot(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]);
############################### Extract cummulative radiation direct-normal solar (Watts m^-2) ##################
# Extracting the missing data marked as -9999.9
direct_n<-psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$direct_n) ;
#
# plot(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"]) ;
#
#
# plot(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"dt"],cumsum(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"])) ;
# abline(h=direct_n, col="RED",lwd=5)
#Convert radiation data from Watts m^-2 to MJ/m2
# [watt/m2  = Watt-sec/m2-sec = Joule/m2-sec] * [60sec/min*60min/hr*24hr/day]*[1 MJ /10^6 J]
SOLAR<-sum(direct_n) * 60 * (24*60/length(direct_n))  / 10^6 ;
###############################  Extract Minimum and maximum relative humidity ###########################################
# Extracting the missing data marked as -9999.9
RHX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
RHN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$rh) ;
# plot(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]) ;
#
############################### Extract average wind speed ################################################################
# Extracting the missing data marked as -9999.9
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$windspd) ;
#
# plot(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"])
# abline(h=WIND, col="RED",lwd=5)
############################### Collect the data in a data frame and write it to the SurfradData.txt data file ############
SurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;
SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")] <-signif(SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")],4)
write.table(SurfradData , file="SurfradData.txt" , append=T , row.names = F, sep="\t", quote = F, col.names = F ) ;
rm("psuSRFRAD.data" ,"SurfradData",)
}
rm(j)
}
rm(i)
ls
ls()
ls()
ls(-j)
ls()
str(ls())
ls()==j
ls=="j"
ls()=="j"
ls()[ls()!%in% c("j", "WIND")]
ls()[1]
!ls() %in% C
!ls() %in% c("j")
!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" )
rm(!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" ))
rm(ls()[!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" )])
!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" )
ls()[!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" )]
rm(ls()[!ls() %in% c("j","SurfRad.names","List_years","List_HTML_files" )])
ls()[!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" )]
rm(ls()[!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" )])
ls()[!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" )]
remove.files<-ls()[!ls() %in% c("j","SurfRad.names","List_HMTML_years","List_HTML_files" )]
rm(remove.files)
ls()
ls()[!ls() %in% c("j","SurfRad.names","List_years","List_HTML_files" )]
remove.files<-ls()[!ls() %in% c("j","SurfRad.names","List_years","List_HTML_files" )]
rm(remove.files)
ls()[!ls() %in% c("j","SurfRad.names","List_years","List_HTML_files" )]
ls()[!ls() %in% c("j","SurfRad.names","List_years","List_HTML_files" )]
remove.files(ls()[!ls() %in% c("j","SurfRad.names","List_years","List_HTML_files" )])
remove.files<-ls()[!ls() %in% c("j","SurfRad.names","List_years","List_HTML_files" )]
remove.files
j
i
source('C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/RoseRCodeScripts/NOAA_SURFRAD_R/SURFRAD_Loop_R.R')
i
j
psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,i,"/",j), skip=2, header=F, as.is= T)   ;
names(psuSRFRAD.data)[1:9]<-SurfRad.names[1:9]   ;
names(psuSRFRAD.data)[seq(10,48,2)]<-c("QC") ;
names(psuSRFRAD.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;
YEAR<-psuSRFRAD.data$year[1] ;
DOY<-psuSRFRAD.data$jday[1]  ;
TX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
TN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
direct_n<-psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"] ;
SOLAR<-sum(direct_n) * 60 * (24*60/length(direct_n))  / 10^6 ;
RHX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
RHN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
SurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;
SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")] <-signif(SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")],4)
write.table(SurfradData , file="SurfradData.txt" , append=T , row.names = F, sep="\t", quote = F, col.names = F ) ;
remove.files<-ls()[!ls() %in% c("j","SurfRad.names","List_years","List_HTML_files" )]
remove.files
remove.files<-ls()[!ls() %in% c("j","SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
remove.files
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
remove.files
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
rm(remove.files)
ls()
for (j in List_files)  {
psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,i,"/",j), skip=2, header=F, as.is= T)   ;
# psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,"2000","/","psu00180.dat"), skip=2, header=F, as.is= T)
### Adding names and quality control flags -QC- names to he appropriate columns:
names(psuSRFRAD.data)[1:9]<-SurfRad.names[1:9]   ;
names(psuSRFRAD.data)[seq(10,48,2)]<-c("QC") ;
names(psuSRFRAD.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;
####  QC flags description
# A QC flag of zero indicates that the corresponding data point is good, having
# passed all QC checks. A value greater than 0 indicates that the data failed one
# level of QC. For example, a QC value of 1 means that the recorded value is
# beyond a physically possible range, or it has been affected adversely in some manner to produce a
# knowingly bad value. A value of 2 indicates that the data value failed the second level QC check,
# indicating that the data value may be
# physically possible but should be used with scrutiny, and so on. Missing
# values are indicated by -9999.9 and should always have a QC flag of 1.
###############################################################################################################
#              Processing the SURFRAD data to the format required by Cycles weather input files
###############################################################################################################
# PP TX TN SOLAR RHX RHN WIND  ; NO PP , temp , solar ? , rh, windspd,
############################### Reading the Year and Doy of year   #######################################
YEAR<-psuSRFRAD.data$year[1] ;
DOY<-psuSRFRAD.data$jday[1]  ;
############################### Extract Minimum and maximum temperature #######################################
TX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
TN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$temp) ;
# plot(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]);
############################### Extract cummulative radiation direct-normal solar (Watts m^-2) ##################
# Extracting the missing data marked as -9999.9
direct_n<-psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$direct_n) ;
#
# plot(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"]) ;
#
#
# plot(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"dt"],cumsum(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"])) ;
# abline(h=direct_n, col="RED",lwd=5)
#Convert radiation data from Watts m^-2 to MJ/m2
# [watt/m2  = Watt-sec/m2-sec = Joule/m2-sec] * [60sec/min*60min/hr*24hr/day]*[1 MJ /10^6 J]
SOLAR<-sum(direct_n) * 60 * (24*60/length(direct_n))  / 10^6 ;
###############################  Extract Minimum and maximum relative humidity ###########################################
# Extracting the missing data marked as -9999.9
RHX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
RHN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$rh) ;
# plot(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]) ;
#
############################### Extract average wind speed ################################################################
# Extracting the missing data marked as -9999.9
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$windspd) ;
#
# plot(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"])
# abline(h=WIND, col="RED",lwd=5)
############################### Collect the data in a data frame and write it to the SurfradData.txt data file ############
SurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;
SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")] <-signif(SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")],4)
write.table(SurfradData , file="SurfradData.txt" , append=T , row.names = F, sep="\t", quote = F, col.names = F ) ;
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
rm(remove.files)
}
for (i in List_years[List_years != "README"])  {
List_HTML_files<-getURLContent(paste0(PennStSurfrad.url,i,"/"), ftp.use.epsv = FALSE, dirlistonly = TRUE)  ;
List_files<-strsplit(List_HTML_files,"\r*\n")[[1]] ;
for (j in List_files)  {
psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,i,"/",j), skip=2, header=F, as.is= T)   ;
# psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,"2000","/","psu00180.dat"), skip=2, header=F, as.is= T)
### Adding names and quality control flags -QC- names to he appropriate columns:
names(psuSRFRAD.data)[1:9]<-SurfRad.names[1:9]   ;
names(psuSRFRAD.data)[seq(10,48,2)]<-c("QC") ;
names(psuSRFRAD.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;
####  QC flags description
# A QC flag of zero indicates that the corresponding data point is good, having
# passed all QC checks. A value greater than 0 indicates that the data failed one
# level of QC. For example, a QC value of 1 means that the recorded value is
# beyond a physically possible range, or it has been affected adversely in some manner to produce a
# knowingly bad value. A value of 2 indicates that the data value failed the second level QC check,
# indicating that the data value may be
# physically possible but should be used with scrutiny, and so on. Missing
# values are indicated by -9999.9 and should always have a QC flag of 1.
###############################################################################################################
#              Processing the SURFRAD data to the format required by Cycles weather input files
###############################################################################################################
# PP TX TN SOLAR RHX RHN WIND  ; NO PP , temp , solar ? , rh, windspd,
############################### Reading the Year and Doy of year   #######################################
YEAR<-psuSRFRAD.data$year[1] ;
DOY<-psuSRFRAD.data$jday[1]  ;
############################### Extract Minimum and maximum temperature #######################################
TX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
TN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$temp) ;
# plot(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]);
############################### Extract cummulative radiation direct-normal solar (Watts m^-2) ##################
# Extracting the missing data marked as -9999.9
direct_n<-psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$direct_n) ;
#
# plot(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"]) ;
#
#
# plot(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"dt"],cumsum(psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"])) ;
# abline(h=direct_n, col="RED",lwd=5)
#Convert radiation data from Watts m^-2 to MJ/m2
# [watt/m2  = Watt-sec/m2-sec = Joule/m2-sec] * [60sec/min*60min/hr*24hr/day]*[1 MJ /10^6 J]
SOLAR<-sum(direct_n) * 60 * (24*60/length(direct_n))  / 10^6 ;
###############################  Extract Minimum and maximum relative humidity ###########################################
# Extracting the missing data marked as -9999.9
RHX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
RHN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$rh) ;
# plot(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]) ;
#
############################### Extract average wind speed ################################################################
# Extracting the missing data marked as -9999.9
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
# plot(psuSRFRAD.data$dt,psuSRFRAD.data$windspd) ;
#
# plot(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"dt"],psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"])
# abline(h=WIND, col="RED",lwd=5)
############################### Collect the data in a data frame and write it to the SurfradData.txt data file ############
SurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;
SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")] <-signif(SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")],4)
write.table(SurfradData , file="SurfradData.txt" , append=T , row.names = F, sep="\t", quote = F, col.names = F ) ;
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
rm(remove.files)
}
rm(j)
}
rm(remove.files)
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
rm(remove.files)
ls()
rm(ls())
remove.files<-list(ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")])
rm(remove.files)
ls()
rm(list=remove.files)
remove.files<-list(ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")])
rm(list=remove.files)
rm(list=ls())
rm(ls())
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
rm(list=remove.files)
source('C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/RoseRCodeScripts/NOAA_SURFRAD_R/SURFRAD_Loop_R.R')
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
remove.files
source('C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/RoseRCodeScripts/NOAA_SURFRAD_R/SURFRAD_Loop_R.R')
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
remove.files
rm(list=remove.files)
source('C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/RoseRCodeScripts/NOAA_SURFRAD_R/SURFRAD_Loop_R.R')
i
j
j="psu04147.dat"
psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,i,"/",j), skip=2, header=F, as.is= T)
head(psuSRFRAD.data)
names(psuSRFRAD.data)[1:9]<-SurfRad.names[1:9]   ;
names(psuSRFRAD.data)[seq(10,48,2)]<-c("QC") ;
names(psuSRFRAD.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;
head(psuSRFRAD.data)
147<-psuSRFRAD.data
data2004147<-psuSRFRAD.data
i
j
j="psu04148.dat"
psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,i,"/",j), skip=2, header=F, as.is= T)   ;
names(psuSRFRAD.data)[1:9]<-SurfRad.names[1:9]   ;
names(psuSRFRAD.data)[seq(10,48,2)]<-c("QC") ;
names(psuSRFRAD.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;
YEAR<-psuSRFRAD.data$year[1] ;
DOY<-psuSRFRAD.data$jday[1]  ;
TX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
TN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
direct_n<-psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"] ;
SOLAR<-sum(direct_n) * 60 * (24*60/length(direct_n))  / 10^6 ;
RHX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
RHN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
SurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;
SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")] <-signif(SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")],4)
write.table(SurfradData , file="SurfradData.txt" , append=T , row.names = F, sep="\t", quote = F, col.names = F ) ;
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
data2004148<-psuSRFRAD.data
YEAR
DOY
TX
TN
direct_n
SOLAR
RHX
psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"])
,"rh"]
psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"]
psuSRFRAD.data[,"rh"]
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
RXN
RHX
(RHX == numeric(0))
length (RHX) == 0
psuSRFRAD.data<-read.table(paste0(PennStSurfrad.url,i,"/",j), skip=2, header=F, as.is= T)   ;
names(psuSRFRAD.data)[1:9]<-SurfRad.names[1:9]   ;
names(psuSRFRAD.data)[seq(10,48,2)]<-c("QC") ;
names(psuSRFRAD.data)[seq(11,47,2)]<-SurfRad.names[10:28] ;
YEAR<-psuSRFRAD.data$year[1] ;
DOY<-psuSRFRAD.data$jday[1]  ;
TX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
TN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$temp != -9999.9,"temp"]),"temp"] ;
if (length (TX) == 0) TX<- -9999.9 ;
if (length (TN) == 0) TN<- -9999.9 ;
direct_n<-psuSRFRAD.data[psuSRFRAD.data$direct_n != -9999.9,"direct_n"] ;
SOLAR<-sum(direct_n) * 60 * (24*60/length(direct_n))  / 10^6 ;
if (length (SOLAR) == 0) SOLAR<- -9999.9   ;
RHX<-psuSRFRAD.data[which.max(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
RHN<-psuSRFRAD.data[which.min(psuSRFRAD.data[psuSRFRAD.data$rh != -9999.9,"rh"]),"rh"] ;
if (length (RHX) == 0) RHX<- -9999.9 ;
if (length (RHN) == 0) RHN<- -9999.9 ;
WIND<-mean(psuSRFRAD.data[psuSRFRAD.data$windspd != -9999.9,"windspd"]) ;
if (length (WIND) == 0) WIND<- -9999.9 ;
SurfradData<-data.frame(YEAR, DOY , TX , TN , SOLAR , RHX , RHN , WIND)  ;
SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")] <-signif(SurfradData[,c("TX" , "TN" , "SOLAR" , "RHX" , "RHN" , "WIND")],4)
write.table(SurfradData , file="SurfradData.txt" , append=T , row.names = F, sep="\t", quote = F, col.names = F ) ;
remove.files<-ls()[!ls() %in% c("j", "i" ,"SurfRad.names","List_years","List_files", "PennStSurfrad.url")]
rm(list=remove.files)
SURFRAD_DATA<-read.table("SurfradData.txt", skip=4, header=T, as.is=T) ;
head(SURFRAD_DATA)
str(SURFRAD_DATA)
head(as.character(SURFRAD_DATA$YEAR))
head(as.character(SURFRAD_DATA$DOY))
paste0(as.character(SURFRAD_DATA$YEAR), ":" , as.character(SURFRAD_DATA$DOY)
)
as.Date((paste0(as.character(SURFRAD_DATA$YEAR), ":" , as.character(SURFRAD_DATA$DOY),  "%Y:%j")
as.Date(paste0(as.character(SURFRAD_DATA$YEAR), ":" , as.character(SURFRAD_DATA$DOY)),  "%Y:%j")
SURFRAD_DATA$DATE<-as.Date(paste0(as.character(SURFRAD_DATA$YEAR), ":" , as.character(SURFRAD_DATA$DOY)),  "%Y:%j") ;
plot(SURFRAD_DATA$DATE, SURFRAD_DATA$TX, col="RED")
plot(SURFRAD_DATA$DATE, SURFRAD_DATA$TX, type="l",col="RED")
plot(SURFRAD_DATA$DATE, SURFRAD_DATA$TX,col="RED")  ;
points(SURFRAD_DATA$DATE, SURFRAD_DATA$TN,col="BLUE")   ;
plot(SURFRAD_DATA$DATE, SURFRAD_DATA$TX,col="RED")  ;
points(SURFRAD_DATA$DATE, SURFRAD_DATA$TN,col="BLUE")   ;
plot(SURFRAD_DATA$DATE, SURFRAD_DATA$SOLAR,col="RED")  ;
plot(SURFRAD_DATA$DATE, SURFRAD_DATA$WIND,col="BLUE")  ;
plot(SURFRAD_DATA$DATE, SURFRAD_DATA$RHX,col="RED")  ;
points(SURFRAD_DATA$DATE, SURFRAD_DATA$RHN,col="BLUE")   ;
source('C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/RoseRCodeScripts/NOAA_SURFRAD_R/SURFRAD_Loop_R.R')
source('C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/RoseRCodeScripts/NOAA_SURFRAD_R/SURFRAD_Loop_R.R')
